using LambdicSql.ConverterServices;
using LambdicSql.ConverterServices.SymbolConverters;

namespace LambdicSql.SqlServer
{
    //@@@
    public static partial class Symbol
    {
        /// <summary>
        /// ASYMKEY_ID
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/asymkey-id-transact-sql
        /// </summary>
        /// <param name="asym_key_name">asym_key_name.</param>
        /// <returns>kye id.</returns>
        [FuncStyleConverter]
        public static int? AsymKey_Id(string asym_key_name) => throw new InvalitContextException(nameof(AsymKey_Id));

        /// <summary>
        /// ASYMKEYPROPERTY
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/asymkeyproperty-transact-sql
        /// </summary>
        /// <param name="key_id">key_id.</param>
        /// <param name="param">algorithm_desc or string_sid or sid.</param>
        /// <returns>the properties of an asymmetric key.</returns>
        [FuncStyleConverter]
        public static object AsymKeyProperty(int? key_id, string param) => throw new InvalitContextException(nameof(AsymKeyProperty));

        /// <summary>
        /// CERTPROPERTY 
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/certproperty-transact-sql
        /// </summary>
        /// <param name="cert_id">cert_id.</param>
        /// <param name="PropertyName">PropertyName.</param>
        /// <returns>property.</returns>
        [FuncStyleConverter]
        public static object CertProperty(int? cert_id, string PropertyName) => throw new InvalitContextException(nameof(CertProperty));

        /// <summary>
        /// CERT_ID.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/cert-id-transact-sql
        /// </summary>
        /// <param name="cert_name">cert_name.</param>
        /// <returns>id.</returns>
        [FuncStyleConverter]
        public static int? Cert_Id(string cert_name) => throw new InvalitContextException(nameof(Cert_Id));

        /// <summary>
        /// CRYPT_GEN_RANDOM.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/crypt-gen-random-transact-sql
        /// </summary>
        /// <param name="length">length.</param>
        /// <param name="seed">seed.</param>
        /// <returns>a cryptographic random number generated by the Crypto API (CAPI). The output is a hexadecimal number of the specified number of bytes.</returns>
        [FuncStyleConverter]
        public static byte[] Crypt_Gen_Random(int length, byte[] seed) => throw new InvalitContextException(nameof(Crypt_Gen_Random));

        /// <summary>
        /// DECRYPTBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbyasymkey-transact-sql.
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByAsymKey(int? Asym_Key_ID, string ciphertext) => throw new InvalitContextException(nameof(DecryptByAsymKey));

        /// <summary>
        /// DECRYPTBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbyasymkey-transact-sql.
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="password">password.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByAsymKey(int? Asym_Key_ID, string ciphertext, string password) => throw new InvalitContextException(nameof(DecryptByAsymKey));

        /// <summary>
        /// DECRYPTBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbycert-transact-sql
        /// </summary>
        /// <param name="certificate_ID">certificate_ID.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByCert(int? certificate_ID, string ciphertext) => throw new InvalitContextException(nameof(DecryptByCert));

        /// <summary>
        /// DECRYPTBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbycert-transact-sql
        /// </summary>
        /// <param name="certificate_ID">certificate_ID.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="password">password.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByCert(int? certificate_ID, string ciphertext, string password) => throw new InvalitContextException(nameof(DecryptByCert));

        /// <summary>
        /// DECRYPTBYKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykey-transact-sql
        /// </summary>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKey(string ciphertext) => throw new InvalitContextException(nameof(DecryptByKey));

        /// <summary>
        /// DECRYPTBYKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykey-transact-sql
        /// </summary>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="add_authenticator">add_authenticator.</param>
        /// <param name="authenticator">authenticator.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKey(string ciphertext, int add_authenticator, byte[] authenticator) => throw new InvalitContextException(nameof(DecryptByKey));

        /// <summary>
        /// DECRYPTBYKEYAUTOASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykeyautoasymkey-transact-sql
        /// </summary>
        /// <param name="akey_ID">akey_ID.</param>
        /// <param name="akey_password">akey_password.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKeyAutoAsymKey(int? akey_ID, string akey_password, object ciphertext) => throw new InvalitContextException(nameof(DecryptByKeyAutoAsymKey));

        /// <summary>
        /// DECRYPTBYKEYAUTOASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykeyautoasymkey-transact-sql
        /// </summary>
        /// <param name="akey_ID">akey_ID.</param>
        /// <param name="akey_password">akey_password.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="add_authenticator">add_authenticator.</param>
        /// <param name="authenticator">authenticator.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKeyAutoAsymKey(int? akey_ID, string akey_password, object ciphertext, int add_authenticator, byte[] authenticator) => throw new InvalitContextException(nameof(DecryptByKeyAutoAsymKey));

        /// <summary>
        /// DECRYPTBYKEYAUTOCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykeyautocert-transact-sql
        /// </summary>
        /// <param name="cert_ID">cert_ID.</param>
        /// <param name="cert_password">cert_password.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKeyAutoCert(int? cert_ID, string cert_password, object ciphertext) => throw new InvalitContextException(nameof(DecryptByKeyAutoCert));

        /// <summary>
        /// DECRYPTBYKEYAUTOCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbykeyautocert-transact-sql
        /// </summary>
        /// <param name="cert_ID">cert_ID.</param>
        /// <param name="cert_password">cert_password.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="add_authenticator">add_authenticator.</param>
        /// <param name="authenticator">authenticator.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByKeyAutoCert(int? cert_ID, string cert_password, object ciphertext, int add_authenticator, byte[] authenticator) => throw new InvalitContextException(nameof(DecryptByKeyAutoCert));

        /// <summary>
        /// DECRYPTBYPASSPHRASE.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbypassphrase-transact-sql
        /// </summary>
        /// <param name="passphrase">passphrase.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByPassphrase(string passphrase, string ciphertext) => throw new InvalitContextException(nameof(DecryptByPassphrase));

        /// <summary>
        /// DECRYPTBYPASSPHRASE.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/decryptbypassphrase-transact-sql
        /// </summary>
        /// <param name="passphrase">passphrase.</param>
        /// <param name="ciphertext">ciphertext.</param>
        /// <param name="add_authenticator">add_authenticator.</param>
        /// <param name="authenticator">authenticator.</param>
        /// <returns>decrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] DecryptByPassphrase(string passphrase, string ciphertext, int add_authenticator, byte[] authenticator) => throw new InvalitContextException(nameof(DecryptByPassphrase));

        /// <summary>
        /// ENCRYPTBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/encryptbyasymkey-transact-sql
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="plaintext">plaintext.</param>
        /// <returns>encrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] EncryptByAsymKey(int? Asym_Key_ID, string plaintext) => throw new InvalitContextException(nameof(EncryptByAsymKey));

        /// <summary>
        /// ENCRYPTBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/encryptbycert-transact-sql
        /// </summary>
        /// <param name="certificate_ID">certificate_ID.</param>
        /// <param name="plaintext">plaintex.t</param>
        /// <returns>encrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] EncryptByCert(int? certificate_ID, string plaintext) => throw new InvalitContextException(nameof(EncryptByCert));

        /// <summary>
        /// ENCRYPTBYKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/encryptbykey-transact-sql
        /// </summary>
        /// <param name="key_GUID">key_GUID.</param>
        /// <param name="param">add_authenticator or authenticator.</param>
        /// <returns>encrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] EncryptByKey(object key_GUID, object param) => throw new InvalitContextException(nameof(EncryptByKey));

        /// <summary>
        /// ENCRYPTBYPASSPHRASE. 
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/encryptbypassphrase-transact-sql
        /// </summary>
        /// <param name="passphrase">passphrase.</param>
        /// <param name="cleartext">cleartext.</param>
        /// <returns>encrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] EncryptByPassphrase(string passphrase, string cleartext) => throw new InvalitContextException(nameof(EncryptByPassphrase));

        /// <summary>
        /// ENCRYPTBYPASSPHRASE. 
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/encryptbypassphrase-transact-sql
        /// </summary>
        /// <param name="passphrase">passphrase.</param>
        /// <param name="cleartext">cleartext.</param>
        /// <param name="add_authenticator">add_authenticator.</param>
        /// <param name="authenticator">authenticator.</param>
        /// <returns>encrypts data.</returns>
        [FuncStyleConverter]
        public static byte[] EncryptByPassphrase(string passphrase, string cleartext, int add_authenticator, byte[] authenticator) => throw new InvalitContextException(nameof(EncryptByPassphrase));

        /// <summary>
        /// HASHBYTES.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/hashbytes-transact-sql
        /// </summary>
        /// <param name="algorithm">algorithm.</param>
        /// <param name="input">input.</param>
        /// <returns>hash.</returns>
        [FuncStyleConverter]
        public static byte[] HashBytes(string algorithm, object input) => throw new InvalitContextException(nameof(HashBytes));

        /// <summary>
        /// IS_OBJECTSIGNED.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/is-objectsigned-transact-sql
        /// </summary>
        /// <param name="obj">obj.</param>
        /// <param name="object_id">object_id.</param>
        /// <param name="class">class.</param>
        /// <param name="param">param.</param>
        /// <returns>Indicates whether an object is signed by a specified certificate or asymmetric key.</returns>
        [FuncStyleConverter]
        public static byte[] Is_ObjectSigned(string obj, int? object_id, object @class, object param) => throw new InvalitContextException(nameof(Is_ObjectSigned));

        /// <summary>
        /// Key_GUID.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/key-guid-transact-sql
        /// </summary>
        /// <returns>the GUID of a symmetric key in the database.</returns>
        [FuncStyleConverter]
        public static object Key_Guid(string Key_Name) => throw new InvalitContextException(nameof(Key_Guid));

        /// <summary>
        /// KEY_ID. 
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/key-id-transact-sql
        /// </summary>
        /// <param name="Key_Name">Key_Name.</param>
        /// <returns>id.</returns>
        [FuncStyleConverter]
        public static int? Key_Id(string Key_Name) => throw new InvalitContextException(nameof(Key_Id));

        /// <summary>
        /// KEY_NAME.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/key-name-transact-sql
        /// </summary>
        /// <param name="param">ciphertext or key_guid.</param>
        /// <returns>name.</returns>
        [FuncStyleConverter]
        public static string Key_Name(object param) => throw new InvalitContextException(nameof(Key_Name));

        /// <summary>
        /// SIGNBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/signbyasymkey-transact-sql
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="plaintext">plaintext.</param>
        /// <returns>bytes.</returns>
        [FuncStyleConverter]
        public static byte[] SignByAsymKey(int? Asym_Key_ID, string plaintext) => throw new InvalitContextException(nameof(SignByAsymKey));

        /// <summary>
        /// SIGNBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/signbyasymkey-transact-sql
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="plaintext">plaintext.</param>
        /// <param name="password">password.</param>
        /// <returns>bytes.</returns>
        [FuncStyleConverter]
        public static byte[] SignByAsymKey(int? Asym_Key_ID, string plaintext, string password) => throw new InvalitContextException(nameof(SignByAsymKey));

        /// <summary>
        /// SIGNBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/signbycert-transact-sql
        /// </summary>
        /// <param name="certificate_ID">certificate_ID.</param>
        /// <param name="plaintext">plaintext.</param>
        /// <returns>bytes.</returns>
        [FuncStyleConverter]
        public static byte[] SignByCert(int? certificate_ID, string plaintext) => throw new InvalitContextException(nameof(SignByCert));

        /// <summary>
        /// SIGNBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/signbycert-transact-sql
        /// </summary>
        /// <param name="certificate_ID">certificate_ID.</param>
        /// <param name="plaintext">plaintext.</param>
        /// <param name="password">password.</param>
        /// <returns>bytes.</returns>
        [FuncStyleConverter]
        public static byte[] SignByCert(int? certificate_ID, string plaintext, string password) => throw new InvalitContextException(nameof(SignByCert));

        /// <summary>
        /// SYMKEYPROPERTY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/symkeyproperty-transact-sql
        /// </summary>
        /// <param name="Key_ID">Key_ID.</param>
        /// <param name="param">algorithm_desc or string_sid or sid.</param>
        /// <returns>the algorithm of a symmetric key created from an EKM module.</returns>
        [FuncStyleConverter]
        public static object SymKeyProperty(int? Key_ID, string param) => throw new InvalitContextException(nameof(SymKeyProperty));

        /// <summary>
        /// VERIFYSIGNEDBYCERT.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/verifysignedbycert-transact-sql
        /// </summary>
        /// <param name="Cert_ID">Cert_ID.</param>
        /// <param name="signed_data">signed_data.</param>
        /// <param name="signature">signature.</param>
        /// <returns>1 when signed data is unchanged; otherwise 0.</returns>
        [FuncStyleConverter]
        public static int VerifySignedByCert(int? Cert_ID, object signed_data, object signature) => throw new InvalitContextException(nameof(VerifySignedByCert));

        /// <summary>
        /// VERIFYSIGNEDBYASYMKEY.
        /// https://docs.microsoft.com/en-us/sql/t-sql/functions/verifysignedbyasymkey-transact-sql
        /// </summary>
        /// <param name="Asym_Key_ID">Asym_Key_ID.</param>
        /// <param name="clear_text">clear_text.</param>
        /// <param name="signature">signature.</param>
        /// <returns>1 when the signatures match; otherwise 0.</returns>
        [FuncStyleConverter]
        public static int VerifySignedByAsymKey(int? Asym_Key_ID, string clear_text, object signature) => throw new InvalitContextException(nameof(VerifySignedByAsymKey));
    }
}
